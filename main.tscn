[gd_scene load_steps=11 format=3 uid="uid://bd0i68dk30gdt"]

[sub_resource type="PhysicalSkyMaterial" id="PhysicalSkyMaterial_51t1i"]

[sub_resource type="Sky" id="Sky_a126s"]
sky_material = SubResource("PhysicalSkyMaterial_51t1i")

[sub_resource type="Environment" id="Environment_4nqai"]
background_mode = 2
sky = SubResource("Sky_a126s")
tonemap_mode = 2
ssr_enabled = true
ssao_enabled = true
ssil_enabled = true
sdfgi_enabled = true
glow_enabled = true
glow_normalized = true

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_y2x7c"]

[sub_resource type="BoxShape3D" id="BoxShape3D_hbiqw"]

[sub_resource type="BoxMesh" id="BoxMesh_2nkrf"]

[sub_resource type="GDScript" id="GDScript_ef8hq"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

@onready var pivot = $CamOrigin
@export var sens = 0.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	
func _input(event):
	if event is InputEventMouseMotion:
		pivot.rotate_z(deg_to_rad(-event.relative.x * sens))
		pivot.rotate_x(deg_to_rad(-event.relative.y * sens))
		pivot.rotation.x = clamp(pivot.rotation.x, deg_to_rad(-90), deg_to_rad(45))
		
func _physics_process(delta):
	
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
	
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="SphereMesh" id="SphereMesh_45lp6"]

[sub_resource type="SphereMesh" id="SphereMesh_fwytf"]

[sub_resource type="SphereShape3D" id="SphereShape3D_ts8js"]

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_4nqai")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 3.72993, 0.332304, 0)
light_energy = 2.0

[node name="StaticBody3D" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.5, 0)
physics_material_override = SubResource("PhysicsMaterial_y2x7c")

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(15, 0, 0, 0, 1, 0, 0, 0, 15, 0, 0, 0)
shape = SubResource("BoxShape3D_hbiqw")

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D"]
transform = Transform3D(15, 0, 0, 0, 1, 0, 0, 0, 15, 0, 0, 0)
mesh = SubResource("BoxMesh_2nkrf")

[node name="Player" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.884445, 0)
script = SubResource("GDScript_ef8hq")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Player"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0)
mesh = SubResource("SphereMesh_45lp6")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Player/MeshInstance3D"]
transform = Transform3D(0.25, 0, 0, 0, 0.25, 0, 0, 0, 0.25, 0.469136, 0.280993, 0)
mesh = SubResource("SphereMesh_fwytf")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
transform = Transform3D(1.1, 0, 0, 0, 1.1, 0, 0, 0, 1.1, 0, 0, 0)
shape = SubResource("SphereShape3D_ts8js")

[node name="CamOrigin" type="Node3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.326378, 0)

[node name="SpringArm3D" type="SpringArm3D" parent="Player/CamOrigin"]
spring_length = 2.0
margin = 0.5

[node name="Camera3D" type="Camera3D" parent="Player/CamOrigin/SpringArm3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2)
